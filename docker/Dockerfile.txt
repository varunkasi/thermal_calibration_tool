FROM ubuntu:22.04

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3.10-dev \
    python3-pip \
    python3-venv \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxrender1 \
    libxext6 \
    libx11-6 \
    libxtst6 \
    libxi6 \
    x11-apps \
    udev \
    libusb-1.0-0 \
    libusb-1.0-0-dev \
    git \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user to run the application
RUN useradd -m -s /bin/bash appuser && \
    mkdir -p /opt/thermal_calibration && \
    chown -R appuser:appuser /opt/thermal_calibration

# Create symbolic link for python
RUN ln -sf /usr/bin/python3.10 /usr/bin/python && \
    ln -sf /usr/bin/pip3 /usr/bin/pip

# Setup FLIR SDK (Using a placeholder since the exact SDK package name may vary)
RUN mkdir -p /opt/flir/sdk
WORKDIR /opt/flir/sdk

# This is a placeholder - Replace with actual FLIR SDK installation steps
# For example, you might need to copy SDK files from the host or download them
# RUN wget https://path-to-flir-sdk/flir-sdk.tar.gz && \
#    tar -xzf flir-sdk.tar.gz && \
#    cd flir-sdk && \
#    python setup.py install

# Switch to appuser
USER appuser

# Set up Python environment
WORKDIR /opt/thermal_calibration
COPY --chown=appuser:appuser docker/requirements.txt .
RUN python -m pip install --upgrade pip && \
    python -m pip install -r requirements.txt

# Copy application code
COPY --chown=appuser:appuser . .

# Mount points for camera device and shared X11 socket
VOLUME ["/dev/bus/usb", "/tmp/.X11-unix"]

# Set environment variable for display
ENV DISPLAY=:0

# Set entry point to main application
ENTRYPOINT ["python", "-m", "src.main"]
